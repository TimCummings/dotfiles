local wezterm = require 'wezterm';

local my_keys = {
  {key="PageUp", mods="SHIFT", action=wezterm.action{ScrollByLine=-20}},
  {key="PageDown", mods="SHIFT", action=wezterm.action{ScrollByLine=20}},

  -- panes
  { key="x", mods="LEADER",
  action=wezterm.action{SplitHorizontal={domain="CurrentPaneDomain"}} },
  { key="v", mods="LEADER",
  action=wezterm.action{SplitVertical={domain="CurrentPaneDomain"}} },
  { key="c", mods="LEADER",
  action=wezterm.action{CloseCurrentPane={confirm=true}} },
  { key = "h", mods="LEADER",
  action=wezterm.action{ActivatePaneDirection="Left"} },
  { key = "l", mods="LEADER",
  action=wezterm.action{ActivatePaneDirection="Right"} },
  { key = "k", mods="LEADER",
  action=wezterm.action{ActivatePaneDirection="Up"} },
  { key = "j", mods="LEADER",
  action=wezterm.action{ActivatePaneDirection="Down"} },
  { key = "<", mods = "LEADER", action=wezterm.action{AdjustPaneSize={"Left", 5}} },
  { key = ">", mods = "LEADER", action=wezterm.action{AdjustPaneSize={"Right", 5}} },
  { key = "+", mods = "LEADER", action=wezterm.action{AdjustPaneSize={"Up", 5}} },
  { key = "-", mods = "LEADER", action=wezterm.action{AdjustPaneSize={"Down", 5}} },
  { key = "z", mods="LEADER", action="TogglePaneZoomState" },

  -- tabs (like tmux "windows")
  { key="t", mods="LEADER",
  action=wezterm.action{SpawnTab="CurrentPaneDomain"} },
  { key="n", mods="LEADER", action=wezterm.action{ActivateTabRelative=1} },
  { key="p", mods="LEADER", action=wezterm.action{ActivateTabRelative=-1} },
  { key="w", mods="LEADER", action="ShowTabNavigator" },
};

for i = 0, 7 do
  table.insert(my_keys, {
    key=tostring(i),
    mods="LEADER",
    action=wezterm.action{ActivateTab=i},
  })
end

wezterm.on("format-tab-title", function(tab, tabs, panes, config, hover, max_width)
  local pane_title = tab.active_pane.title
  local user_title = tab.active_pane.user_vars.panetitle

  if user_title ~= nil and #user_title > 0 then
    pane_title = user_title
  end

  return {
    {Text=" " .. pane_title .. " "},
  }
end)

return {
  -- color_scheme = 'Ayu Mirage',
  -- color_scheme = 'Batman',
  -- color_scheme = 'BlulocoDark',
  -- color_scheme = 'ChallengerDeep',

  -- warning: `color_scheme` overrides all `colors` options!
  -- Challenger Deep (modified)
  colors = {
    foreground = "#cbe1e7",
    background = "#1e1c31",
    cursor_bg = "#cbe1e7",
    cursor_border = "#cbe1e7",
    cursor_fg = "#1e1c31",
    selection_bg = "#cbe1e7",
    selection_fg = "#1e1c31",

    ansi = { "#141228","#ff5458","#62d196","#ffb378","#65b2ff","#906cff","#63f2f1","#a6b3cc" },
    brights = { "#565575","#ff8080","#95ffa4","#ffe9aa","#91ddff","#c991e1","#aaffe4","#cbe3e7" },
  },

  -- -- Material Oceanic
  -- colors = {
  --   foreground = "#b0bec5",
  --   background = "#263238",
  --   cursor_bg = "#cbe1e7",
  --   cursor_border = "#cbe1e7",
  --   cursor_fg = "#1e1c31",
  --   selection_bg = "#546e7a",
  --   selection_fg = "#fff",

  --   ansi = { "#eeffff","#ff5370","#c3e88d","#f78c6c","#82aaff","#c792ea","#89ddff","#546e7a" },
  --   brights = { "#eeffff","#f07178","#c3e88d","#ffcb6b","#82aaff","#c792ea","#89ddff","#546e7a" },
  -- },

  -- Custom (borrowing heavily from Challenger Deep & Nightfox)
  -- colors = {
  --   foreground = "#abb2bf",
  --   background = "#192330",
  --   cursor_bg = "#cbe1e7",
  --   cursor_border = "#cbe1e7",
  --   cursor_fg = "#1e1c31",
  --   selection_bg = "#5f7e97",
  --   selection_fg = "#fff",

  --   -- CD/NF Blend
  --   -- ansi = { "#141228","#ff5458","#58cd8b","#f4a261","#719cd6","#906cff","#63cdcf","#a6b3cc" },
  --   -- brights = { "#475072","#ff8080","#95ffa4","#ffcb6b","#84cee4","#c991e1","#59f0ff","#cbe3e7" },

  --   -- variant
  --   -- ansi = { "#141228","#ff5458","#62d196","#ffb378","#65b2ff","#906cff","#3c909b","#a6b3cc" },
  --   -- brights = { "#282c34","#ff8080","#95ffa4","#ffcb6b","#5cc8ff","#c678dd","#56b6c2","#cbe3e7" },

  --   -- -- nightfox?
  --   -- ansi = { "#393b44","#c94f6d","#81b29a","#f4a261","#719cd6","#9d79d6","#63cdcf","#a6b3cc" },
  --   -- brights = { "#475072","#d6616b","#58cd8b","#f6a878","#84cee4","#b8a1e3","#59f0ff","#cbe3e7" },

  --   -- ansi = { "#d6deeb","#ef5350","#addb67","#f78c6c","#82aaff","#7e57c2","#7fdbca","#637777" },
  --   -- brights = { "#eeffff","#f07178","#addb67","#ecc48d","#82aaff","#c792ea","#7fdbca","#637777" },
  -- },

  adjust_window_size_when_changing_font_size = false,
  bold_brightens_ansi_colors = false,
  exit_behavior = "Close",
  harfbuzz_features = {"calt=0", "clig=0", "liga=0"},
  hide_tab_bar_if_only_one_tab = true,
  tab_and_split_indices_are_zero_based = true,
  -- tab_bar_at_bottom = true,
  use_ime = false, -- try to fix terminal disallowing keyboard input after window resizing

  {{if (ne .chezmoi.os "darwin")}}window_decorations = 'RESIZE',{{end}}
  window_padding = {
    left = '3px',
    right = '3px',
    top = '2px',
    bottom = '2px',
  },

  -- Font Settings; use `wezterm ls-fonts --list-system` to find exact font names
  -- Wezterm now has some terrific fonts built-in, especially JetBrains Mono
  font = wezterm.font 'IntelOne Mono',

  font_size = {{or (and (eq .chezmoi.os "darwin") "18,") "14,"}}

  leader = { key="Escape", mods="CTRL", timeout_milliseconds=1000 },
  keys = my_keys,
}
