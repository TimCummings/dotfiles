# don't "logout" (close window) with CTRL+D
setopt IGNORE_EOF

# shorten escape timeout
KEYTIMEOUT=1

# emacs mode for `^a`, `^e`
bindkey -e

# CTRL-Left-Right jumps words
bindkey "\e[1;5D" backward-word
bindkey "\e[1;5C" forward-word
# MacOS specific
if [[ $OSTYPE == "darwin"* ]]; then
  # real delete (delete forward)
  bindkey "\e[3~" delete-char
# Home and end
  bindkey "^[[H" beginning-of-line
  bindkey "^[[F" end-of-line
fi

# "word characters" are alphanumerics only, like `w` in Vim
# this should e.g. make `^w` stop at nonalphanumerics, not continue until whitespace
autoload -U select-word-style
select-word-style bash

# aliases
alias psf='ps -aux | fzf'

alias l='ls -al --color'
if [[ $OSTYPE == "darwin"* ]]; then
  # MacOS
  alias ls='ls -G'
fi

# git
alias g='git'
# following aliases also in gitconfig (able to use e.g. in vim, but requires a space after `g`)
alias ga='git add'
alias gb='git branch'
alias gbc='git branch | cat'
alias gc='git commit -v'
alias gco='git checkout'
alias gcp='git cherry-pick'
alias gd='git diff'
alias gdc='git diff --cached'
alias gf='git fetch'
alias gfa='git fetch -a'
alias gl='git log'
alias gp='git pull'
alias gr='git rebase'
alias gri='git rebase --interactive'
alias gsh='git show'
alias gst='git status'

alias lg='lazygit'

# nnn file manager
alias nnn='nnn-nerd-static -eoR'

# highlight completion selection
zstyle ':completion:*' menu select

# auto completion:
# - first try simple completion `''`
# - then try case sensitive
# - then try case insensitive
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z-_}={A-Za-z_-}' 'r:|=*' 'l:|=* r:|=*'

# functions

# NNN: enable cd on quit with ^G
function n {
  # Block nesting of nnn in subshells
  if [[ "${NNNLVL:-0}" -ge 1 ]]; then
    echo "nnn is already running"
    return
  fi

  NNN_TMPFILE="${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.lastd"

  # The backslash allows one to alias n to nnn if desired without making an
  # infinitely recursive alias
  \nnn-nerd-static -eoR "$@"

  if [ -f "$NNN_TMPFILE" ]; then
    . "$NNN_TMPFILE"
    rm -f "$NNN_TMPFILE" > /dev/null
  fi
}

# First and only argument is the desired term title
function rename_wezterm_title {
  echo "\x1b]1337;SetUserVar=panetitle=$(echo -n $1 | base64)\x07"
}

# fzf autocomplete & keybindings
[ -f "${XDG_CONFIG_HOME}"/fzf/fzf.zsh ] && source "${XDG_CONFIG_HOME}"/fzf/fzf.zsh

# Homebrew package manager - must go before asdf
if [[ $OSTYPE == "darwin"* ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# asdf version manager
if [ -d "$ASDF_DIR" ]; then
  # append completions to fpath
  fpath=(${ASDF_DIR}/completions $fpath)
  # initialise completions with ZSH's compinit
  autoload -Uz compinit
  compinit
  # source the main script
  . $ASDF_DIR/asdf.sh
  # hook direnv into shell for faster asdf
  eval "$(direnv hook zsh)"
else
  echo "Asdf appears to not be installed, skipping."
fi

# asdf managed executables - must go after asdf

# Golang
# replace all occurrences - ${parameter//pattern/string}
if type go &> /dev/null; then
  GO_BIN="$(go env GOPATH)/bin"
  [[ ":$PATH:" == *":${GO_BIN}:"* ]] && PATH="${PATH//$GO_BIN:/}"
  export PATH="$PATH:${GO_BIN}"
else
  echo "Golang is not installed; skipping!"
fi

# Rust
if type cargo &> /dev/null; then
  # replace all occurrences - ${parameter//pattern/string}
  CARGO_BIN="$(asdf where rust)/bin"
  [[ ":$PATH:" == *":${CARGO_BIN}:"* ]] && PATH="${PATH//$CARGO_BIN:/}"
  export PATH="$PATH:${CARGO_BIN}"
fi

# TypeScript language server
if [[ $OSTYPE == "darwin"* ]]; then
  # replace all occurrences - ${parameter//pattern/string}
  YARN_BIN="$(yarn global bin)"
  [[ ":$PATH:" == *":${YARN_BIN}:"* ]] && PATH="${PATH//$YARN_BIN:/}"
  export PATH="$PATH:${YARN_BIN}"
fi

# starship prompt
if type starship &> /dev/null; then
  eval "$(starship init zsh)"
else
  echo "Starship is not installed; skipping!"
fi
